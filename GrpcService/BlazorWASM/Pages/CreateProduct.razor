@page "/CreateProduct"
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject IProductService productService

<div class="col d-flex justify-content-center">
    <div class="card">
        <h5 class="card-header text-center">Add new product to catalogue</h5>
        <div class="card-body">
            <div class="form-group">
                <label for="productName">Product name</label>
                <input id="productName" type="text" class="form-control" @bind="productName" @bind:event="oninput"/>
                @if (!string.IsNullOrEmpty(resultMsg))
                {
                    <label style="color: @color">@resultMsg</label>
                }
            </div>

            <div class="form-group">
                <label for="ean">EAN</label>
                <input id="ean" type="text" class="form-control" @bind="ean" @bind:event="oninput"/>
                @if (!string.IsNullOrEmpty(resultMsg))
                {
                    <label style="color: @color">@resultMsg</label>
                }
            </div>
    
            <div class="input-group">
              <div class="input-group-prepend">
                <span class="input-group-text">Product description</span>
              </div>
              <textarea class="form-control" aria-label="With textarea"></textarea>
            </div>
        </div>
        <div class="card-footer text-center">
            <button @onclick="Create" disabled="@(string.IsNullOrEmpty(productName), string.IsNullOrEmpty(ean))" class="btn btn-primary text-center">Create</button>
        </div>
    </div>
</div>

@code {
    private string ean = "";
    private string productName = "";
    private int stock;
    private string information = "";
    private string resultMsg = "";
    private string color = "";
    
    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await productService.Create(new ProductCreationDto(ean, productName, stock, information));
            ean = "";
            productName = "";
            information = "";
            stock = 0;
            resultMsg = "Product successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}