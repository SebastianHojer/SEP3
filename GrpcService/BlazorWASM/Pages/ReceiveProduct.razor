@page "/ReceiveProduct"
@using global::Shared.DTOs
@using HttpClients.ClientInterfaces
@inject IWarehouseService service

@attribute [Authorize]
<div class="col d-flex justify-content-center">
    <div class="card">
        <h5 class="card-header text-center">Product Receival</h5>
        <div class="card-body">
            <div class="form-group">
                <label for="EAN">EAN</label>
                <input type="text" class="form-control" id="EAN" placeholder="Scan or type EAN here..." @bind="eanTemp" @oninput="@(e => { eanTemp = e.Value.ToString(); })">
            </div>
            <div class="text-center" style="margin-bottom: 1rem">
                <button type="submit" class="btn btn-primary mb-2 text-center" @onclick="@(() => BindEan())">Add to receival list</button>
            </div>
            <div class="scroller">
                <table class="table table-striped">
                    <tbody>
                    @foreach (var item in ean)
                    {
                        <tr>
                            <td>@item</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer text-center">
            <button class="btn btn-primary" @onclick="@(() => Handout(ean))">Add Products</button>
        </div>
    </div>
</div>
@code {

    private List<long> ean = new();
    private string eanTemp;
    private long eanTempLong;
    private string resultMsg = "";

    private void BindEan()
    {
        eanTempLong = long.Parse(eanTemp);
        ean.Add(eanTempLong);
        
        StateHasChanged();
    }

    private async Task Handout(List<long> handoutList)
    {
        try
        {
            string ingoing = "ingoing";
            StockDto dto = new StockDto(handoutList, ingoing);
            await service.StockUpdateAsync(dto);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
        }
        
    }
}